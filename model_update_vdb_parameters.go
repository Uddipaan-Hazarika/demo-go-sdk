/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// UpdateVDBParameters Parameters to update a VDB.
type UpdateVDBParameters struct {
	// Name to set the VDB to.
	Name *string `json:"name,omitempty"`
	// Source config username.
	User *string `json:"user,omitempty"`
	// Source config password
	Password *string `json:"password,omitempty"`
	// Whether to enable VDB restart.
	AutoRestart *bool `json:"auto_restart,omitempty"`
	// Environment to set the VDB to.
	EnvironmentUser *string `json:"environment_user,omitempty"`
	// VDB template reference.
	ConfigTemplate *string `json:"config_template,omitempty"`
	// List of Oracle listener references.
	Listeners []string `json:"listeners,omitempty"`
	// Whether to enable new DBID for Oracle
	NewDbid *bool `json:"new_dbid,omitempty"`
	// Whether to enable CDC on provision for MSSQL
	CdcOnProvision *bool `json:"cdc_on_provision,omitempty"`
	// Pre script for MSSQL.
	PreScript *string `json:"pre_script,omitempty"`
	// Post script for MSSQL.
	PostScript *string `json:"post_script,omitempty"`
}

// NewUpdateVDBParameters instantiates a new UpdateVDBParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVDBParameters() *UpdateVDBParameters {
	this := UpdateVDBParameters{}
	return &this
}

// NewUpdateVDBParametersWithDefaults instantiates a new UpdateVDBParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVDBParametersWithDefaults() *UpdateVDBParameters {
	this := UpdateVDBParameters{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateVDBParameters) SetName(v string) {
	o.Name = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *UpdateVDBParameters) SetUser(v string) {
	o.User = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UpdateVDBParameters) SetPassword(v string) {
	o.Password = &v
}

// GetAutoRestart returns the AutoRestart field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetAutoRestart() bool {
	if o == nil || o.AutoRestart == nil {
		var ret bool
		return ret
	}
	return *o.AutoRestart
}

// GetAutoRestartOk returns a tuple with the AutoRestart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetAutoRestartOk() (*bool, bool) {
	if o == nil || o.AutoRestart == nil {
		return nil, false
	}
	return o.AutoRestart, true
}

// HasAutoRestart returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasAutoRestart() bool {
	if o != nil && o.AutoRestart != nil {
		return true
	}

	return false
}

// SetAutoRestart gets a reference to the given bool and assigns it to the AutoRestart field.
func (o *UpdateVDBParameters) SetAutoRestart(v bool) {
	o.AutoRestart = &v
}

// GetEnvironmentUser returns the EnvironmentUser field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetEnvironmentUser() string {
	if o == nil || o.EnvironmentUser == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentUser
}

// GetEnvironmentUserOk returns a tuple with the EnvironmentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetEnvironmentUserOk() (*string, bool) {
	if o == nil || o.EnvironmentUser == nil {
		return nil, false
	}
	return o.EnvironmentUser, true
}

// HasEnvironmentUser returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasEnvironmentUser() bool {
	if o != nil && o.EnvironmentUser != nil {
		return true
	}

	return false
}

// SetEnvironmentUser gets a reference to the given string and assigns it to the EnvironmentUser field.
func (o *UpdateVDBParameters) SetEnvironmentUser(v string) {
	o.EnvironmentUser = &v
}

// GetConfigTemplate returns the ConfigTemplate field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetConfigTemplate() string {
	if o == nil || o.ConfigTemplate == nil {
		var ret string
		return ret
	}
	return *o.ConfigTemplate
}

// GetConfigTemplateOk returns a tuple with the ConfigTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetConfigTemplateOk() (*string, bool) {
	if o == nil || o.ConfigTemplate == nil {
		return nil, false
	}
	return o.ConfigTemplate, true
}

// HasConfigTemplate returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasConfigTemplate() bool {
	if o != nil && o.ConfigTemplate != nil {
		return true
	}

	return false
}

// SetConfigTemplate gets a reference to the given string and assigns it to the ConfigTemplate field.
func (o *UpdateVDBParameters) SetConfigTemplate(v string) {
	o.ConfigTemplate = &v
}

// GetListeners returns the Listeners field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetListeners() []string {
	if o == nil || o.Listeners == nil {
		var ret []string
		return ret
	}
	return o.Listeners
}

// GetListenersOk returns a tuple with the Listeners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetListenersOk() ([]string, bool) {
	if o == nil || o.Listeners == nil {
		return nil, false
	}
	return o.Listeners, true
}

// HasListeners returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasListeners() bool {
	if o != nil && o.Listeners != nil {
		return true
	}

	return false
}

// SetListeners gets a reference to the given []string and assigns it to the Listeners field.
func (o *UpdateVDBParameters) SetListeners(v []string) {
	o.Listeners = v
}

// GetNewDbid returns the NewDbid field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetNewDbid() bool {
	if o == nil || o.NewDbid == nil {
		var ret bool
		return ret
	}
	return *o.NewDbid
}

// GetNewDbidOk returns a tuple with the NewDbid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetNewDbidOk() (*bool, bool) {
	if o == nil || o.NewDbid == nil {
		return nil, false
	}
	return o.NewDbid, true
}

// HasNewDbid returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasNewDbid() bool {
	if o != nil && o.NewDbid != nil {
		return true
	}

	return false
}

// SetNewDbid gets a reference to the given bool and assigns it to the NewDbid field.
func (o *UpdateVDBParameters) SetNewDbid(v bool) {
	o.NewDbid = &v
}

// GetCdcOnProvision returns the CdcOnProvision field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetCdcOnProvision() bool {
	if o == nil || o.CdcOnProvision == nil {
		var ret bool
		return ret
	}
	return *o.CdcOnProvision
}

// GetCdcOnProvisionOk returns a tuple with the CdcOnProvision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetCdcOnProvisionOk() (*bool, bool) {
	if o == nil || o.CdcOnProvision == nil {
		return nil, false
	}
	return o.CdcOnProvision, true
}

// HasCdcOnProvision returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasCdcOnProvision() bool {
	if o != nil && o.CdcOnProvision != nil {
		return true
	}

	return false
}

// SetCdcOnProvision gets a reference to the given bool and assigns it to the CdcOnProvision field.
func (o *UpdateVDBParameters) SetCdcOnProvision(v bool) {
	o.CdcOnProvision = &v
}

// GetPreScript returns the PreScript field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetPreScript() string {
	if o == nil || o.PreScript == nil {
		var ret string
		return ret
	}
	return *o.PreScript
}

// GetPreScriptOk returns a tuple with the PreScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetPreScriptOk() (*string, bool) {
	if o == nil || o.PreScript == nil {
		return nil, false
	}
	return o.PreScript, true
}

// HasPreScript returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasPreScript() bool {
	if o != nil && o.PreScript != nil {
		return true
	}

	return false
}

// SetPreScript gets a reference to the given string and assigns it to the PreScript field.
func (o *UpdateVDBParameters) SetPreScript(v string) {
	o.PreScript = &v
}

// GetPostScript returns the PostScript field value if set, zero value otherwise.
func (o *UpdateVDBParameters) GetPostScript() string {
	if o == nil || o.PostScript == nil {
		var ret string
		return ret
	}
	return *o.PostScript
}

// GetPostScriptOk returns a tuple with the PostScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVDBParameters) GetPostScriptOk() (*string, bool) {
	if o == nil || o.PostScript == nil {
		return nil, false
	}
	return o.PostScript, true
}

// HasPostScript returns a boolean if a field has been set.
func (o *UpdateVDBParameters) HasPostScript() bool {
	if o != nil && o.PostScript != nil {
		return true
	}

	return false
}

// SetPostScript gets a reference to the given string and assigns it to the PostScript field.
func (o *UpdateVDBParameters) SetPostScript(v string) {
	o.PostScript = &v
}

func (o UpdateVDBParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.AutoRestart != nil {
		toSerialize["auto_restart"] = o.AutoRestart
	}
	if o.EnvironmentUser != nil {
		toSerialize["environment_user"] = o.EnvironmentUser
	}
	if o.ConfigTemplate != nil {
		toSerialize["config_template"] = o.ConfigTemplate
	}
	if o.Listeners != nil {
		toSerialize["listeners"] = o.Listeners
	}
	if o.NewDbid != nil {
		toSerialize["new_dbid"] = o.NewDbid
	}
	if o.CdcOnProvision != nil {
		toSerialize["cdc_on_provision"] = o.CdcOnProvision
	}
	if o.PreScript != nil {
		toSerialize["pre_script"] = o.PreScript
	}
	if o.PostScript != nil {
		toSerialize["post_script"] = o.PostScript
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateVDBParameters struct {
	value *UpdateVDBParameters
	isSet bool
}

func (v NullableUpdateVDBParameters) Get() *UpdateVDBParameters {
	return v.value
}

func (v *NullableUpdateVDBParameters) Set(val *UpdateVDBParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVDBParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVDBParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVDBParameters(val *UpdateVDBParameters) *NullableUpdateVDBParameters {
	return &NullableUpdateVDBParameters{value: val, isSet: true}
}

func (v NullableUpdateVDBParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVDBParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


