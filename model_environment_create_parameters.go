/*
Delphix API Gateway

Delphix API Gateway API

API version: 1.0
Contact: support@delphix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package delphix_dct_api

import (
	"encoding/json"
)

// EnvironmentCreateParameters struct for EnvironmentCreateParameters
type EnvironmentCreateParameters struct {
	// The name of the environment.
	Name *string `json:"name,omitempty"`
	// The ID of the Engine onto which to create the environment.
	EngineId int64 `json:"engine_id"`
	// Operating system type of the environment.
	OsName string `json:"os_name"`
	// Whether the environment to be created is a cluster.
	IsCluster *bool `json:"is_cluster,omitempty"`
	// Absolute path to cluster home drectory. This parameter is mandatory for UNIX cluster environments.
	ClusterHome *string `json:"cluster_home,omitempty"`
	// host address of the machine.
	Hostname string `json:"hostname"`
	// Id of the connector environment which is used to connect to this source environment. This is mandatory parameter when creating Windows source environments.
	StagingEnvironment *string `json:"staging_environment,omitempty"`
	// Specify port on which Delphix connector will run. This is mandatory parameter when creating Windows target environments.
	ConnectorPort *int32 `json:"connector_port,omitempty"`
	// Whether the environment to be created is a target cluster environment. This property is used only when creating Windows cluster environments.
	IsTarget *bool `json:"is_target,omitempty"`
	// ssh port of the host.
	SshPort *int64 `json:"ssh_port,omitempty"`
	// The path for the toolkit that resides on the host.
	ToolkitPath *string `json:"toolkit_path,omitempty"`
	// Username of the OS.
	Username *string `json:"username,omitempty"`
	// Password of the OS.
	Password *string `json:"password,omitempty"`
	// The name or reference of the vault from which to read the host credentials.
	Vault *string `json:"vault,omitempty"`
	// Vault engine name where the credential is stored.
	HashicorpVaultEngine *string `json:"hashicorp_vault_engine,omitempty"`
	// Path in the vault engine where the credential is stored.
	HashicorpVaultSecretPath *string `json:"hashicorp_vault_secret_path,omitempty"`
	// Key for the username in the key-value store.
	HashicorpVaultUsernameKey *string `json:"hashicorp_vault_username_key,omitempty"`
	// Key for the password in the key-value store.
	HashicorpVaultSecretKey *string `json:"hashicorp_vault_secret_key,omitempty"`
	// Query to find a credential in the CyberArk vault.
	CyberarkVaultQueryString *string `json:"cyberark_vault_query_string,omitempty"`
	// array of ip address or hostnames
	NfsAddresses []string `json:"nfs_addresses,omitempty"`
	// username of the SAP ASE database.
	AseDbUsername *string `json:"ase_db_username,omitempty"`
	// password of the SAP ASE database.
	AseDbPassword *string `json:"ase_db_password,omitempty"`
	// The name or reference of the vault from which to read the ASE database credentials.
	AseDbVault *string `json:"ase_db_vault,omitempty"`
	// Vault engine name where the credential is stored.
	AseDbHashicorpVaultEngine *string `json:"ase_db_hashicorp_vault_engine,omitempty"`
	// Path in the vault engine where the credential is stored.
	AseDbHashicorpVaultSecretPath *string `json:"ase_db_hashicorp_vault_secret_path,omitempty"`
	// Key for the username in the key-value store.
	AseDbHashicorpVaultUsernameKey *string `json:"ase_db_hashicorp_vault_username_key,omitempty"`
	// Key for the password in the key-value store.
	AseDbHashicorpVaultSecretKey *string `json:"ase_db_hashicorp_vault_secret_key,omitempty"`
	// Query to find a credential in the CyberArk vault.
	AseDbCyberarkVaultQueryString *string `json:"ase_db_cyberark_vault_query_string,omitempty"`
	// The path to the user managed Java Development Kit (JDK). If not specified, then the OpenJDK will be used.
	JavaHome *string `json:"java_home,omitempty"`
	// DSP keystore path.
	DspKeystorePath *string `json:"dsp_keystore_path,omitempty"`
	// DSP keystore password.
	DspKeystorePassword *string `json:"dsp_keystore_password,omitempty"`
	// DSP keystore alias.
	DspKeystoreAlias *string `json:"dsp_keystore_alias,omitempty"`
	// DSP truststore path.
	DspTruststorePath *string `json:"dsp_truststore_path,omitempty"`
	// DSP truststore password.
	DspTruststorePassword *string `json:"dsp_truststore_password,omitempty"`
	// The environment description.
	Description *string `json:"description,omitempty"`
}

// NewEnvironmentCreateParameters instantiates a new EnvironmentCreateParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentCreateParameters(engineId int64, osName string, hostname string) *EnvironmentCreateParameters {
	this := EnvironmentCreateParameters{}
	this.EngineId = engineId
	this.OsName = osName
	var isCluster bool = false
	this.IsCluster = &isCluster
	this.Hostname = hostname
	var sshPort int64 = 22
	this.SshPort = &sshPort
	return &this
}

// NewEnvironmentCreateParametersWithDefaults instantiates a new EnvironmentCreateParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentCreateParametersWithDefaults() *EnvironmentCreateParameters {
	this := EnvironmentCreateParameters{}
	var isCluster bool = false
	this.IsCluster = &isCluster
	var sshPort int64 = 22
	this.SshPort = &sshPort
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentCreateParameters) SetName(v string) {
	o.Name = &v
}

// GetEngineId returns the EngineId field value
func (o *EnvironmentCreateParameters) GetEngineId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EngineId
}

// GetEngineIdOk returns a tuple with the EngineId field value
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetEngineIdOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EngineId, true
}

// SetEngineId sets field value
func (o *EnvironmentCreateParameters) SetEngineId(v int64) {
	o.EngineId = v
}

// GetOsName returns the OsName field value
func (o *EnvironmentCreateParameters) GetOsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsName
}

// GetOsNameOk returns a tuple with the OsName field value
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetOsNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OsName, true
}

// SetOsName sets field value
func (o *EnvironmentCreateParameters) SetOsName(v string) {
	o.OsName = v
}

// GetIsCluster returns the IsCluster field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetIsCluster() bool {
	if o == nil || o.IsCluster == nil {
		var ret bool
		return ret
	}
	return *o.IsCluster
}

// GetIsClusterOk returns a tuple with the IsCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetIsClusterOk() (*bool, bool) {
	if o == nil || o.IsCluster == nil {
		return nil, false
	}
	return o.IsCluster, true
}

// HasIsCluster returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasIsCluster() bool {
	if o != nil && o.IsCluster != nil {
		return true
	}

	return false
}

// SetIsCluster gets a reference to the given bool and assigns it to the IsCluster field.
func (o *EnvironmentCreateParameters) SetIsCluster(v bool) {
	o.IsCluster = &v
}

// GetClusterHome returns the ClusterHome field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetClusterHome() string {
	if o == nil || o.ClusterHome == nil {
		var ret string
		return ret
	}
	return *o.ClusterHome
}

// GetClusterHomeOk returns a tuple with the ClusterHome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetClusterHomeOk() (*string, bool) {
	if o == nil || o.ClusterHome == nil {
		return nil, false
	}
	return o.ClusterHome, true
}

// HasClusterHome returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasClusterHome() bool {
	if o != nil && o.ClusterHome != nil {
		return true
	}

	return false
}

// SetClusterHome gets a reference to the given string and assigns it to the ClusterHome field.
func (o *EnvironmentCreateParameters) SetClusterHome(v string) {
	o.ClusterHome = &v
}

// GetHostname returns the Hostname field value
func (o *EnvironmentCreateParameters) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *EnvironmentCreateParameters) SetHostname(v string) {
	o.Hostname = v
}

// GetStagingEnvironment returns the StagingEnvironment field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetStagingEnvironment() string {
	if o == nil || o.StagingEnvironment == nil {
		var ret string
		return ret
	}
	return *o.StagingEnvironment
}

// GetStagingEnvironmentOk returns a tuple with the StagingEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetStagingEnvironmentOk() (*string, bool) {
	if o == nil || o.StagingEnvironment == nil {
		return nil, false
	}
	return o.StagingEnvironment, true
}

// HasStagingEnvironment returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasStagingEnvironment() bool {
	if o != nil && o.StagingEnvironment != nil {
		return true
	}

	return false
}

// SetStagingEnvironment gets a reference to the given string and assigns it to the StagingEnvironment field.
func (o *EnvironmentCreateParameters) SetStagingEnvironment(v string) {
	o.StagingEnvironment = &v
}

// GetConnectorPort returns the ConnectorPort field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetConnectorPort() int32 {
	if o == nil || o.ConnectorPort == nil {
		var ret int32
		return ret
	}
	return *o.ConnectorPort
}

// GetConnectorPortOk returns a tuple with the ConnectorPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetConnectorPortOk() (*int32, bool) {
	if o == nil || o.ConnectorPort == nil {
		return nil, false
	}
	return o.ConnectorPort, true
}

// HasConnectorPort returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasConnectorPort() bool {
	if o != nil && o.ConnectorPort != nil {
		return true
	}

	return false
}

// SetConnectorPort gets a reference to the given int32 and assigns it to the ConnectorPort field.
func (o *EnvironmentCreateParameters) SetConnectorPort(v int32) {
	o.ConnectorPort = &v
}

// GetIsTarget returns the IsTarget field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetIsTarget() bool {
	if o == nil || o.IsTarget == nil {
		var ret bool
		return ret
	}
	return *o.IsTarget
}

// GetIsTargetOk returns a tuple with the IsTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetIsTargetOk() (*bool, bool) {
	if o == nil || o.IsTarget == nil {
		return nil, false
	}
	return o.IsTarget, true
}

// HasIsTarget returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasIsTarget() bool {
	if o != nil && o.IsTarget != nil {
		return true
	}

	return false
}

// SetIsTarget gets a reference to the given bool and assigns it to the IsTarget field.
func (o *EnvironmentCreateParameters) SetIsTarget(v bool) {
	o.IsTarget = &v
}

// GetSshPort returns the SshPort field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetSshPort() int64 {
	if o == nil || o.SshPort == nil {
		var ret int64
		return ret
	}
	return *o.SshPort
}

// GetSshPortOk returns a tuple with the SshPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetSshPortOk() (*int64, bool) {
	if o == nil || o.SshPort == nil {
		return nil, false
	}
	return o.SshPort, true
}

// HasSshPort returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasSshPort() bool {
	if o != nil && o.SshPort != nil {
		return true
	}

	return false
}

// SetSshPort gets a reference to the given int64 and assigns it to the SshPort field.
func (o *EnvironmentCreateParameters) SetSshPort(v int64) {
	o.SshPort = &v
}

// GetToolkitPath returns the ToolkitPath field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetToolkitPath() string {
	if o == nil || o.ToolkitPath == nil {
		var ret string
		return ret
	}
	return *o.ToolkitPath
}

// GetToolkitPathOk returns a tuple with the ToolkitPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetToolkitPathOk() (*string, bool) {
	if o == nil || o.ToolkitPath == nil {
		return nil, false
	}
	return o.ToolkitPath, true
}

// HasToolkitPath returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasToolkitPath() bool {
	if o != nil && o.ToolkitPath != nil {
		return true
	}

	return false
}

// SetToolkitPath gets a reference to the given string and assigns it to the ToolkitPath field.
func (o *EnvironmentCreateParameters) SetToolkitPath(v string) {
	o.ToolkitPath = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *EnvironmentCreateParameters) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *EnvironmentCreateParameters) SetPassword(v string) {
	o.Password = &v
}

// GetVault returns the Vault field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetVault() string {
	if o == nil || o.Vault == nil {
		var ret string
		return ret
	}
	return *o.Vault
}

// GetVaultOk returns a tuple with the Vault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetVaultOk() (*string, bool) {
	if o == nil || o.Vault == nil {
		return nil, false
	}
	return o.Vault, true
}

// HasVault returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasVault() bool {
	if o != nil && o.Vault != nil {
		return true
	}

	return false
}

// SetVault gets a reference to the given string and assigns it to the Vault field.
func (o *EnvironmentCreateParameters) SetVault(v string) {
	o.Vault = &v
}

// GetHashicorpVaultEngine returns the HashicorpVaultEngine field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetHashicorpVaultEngine() string {
	if o == nil || o.HashicorpVaultEngine == nil {
		var ret string
		return ret
	}
	return *o.HashicorpVaultEngine
}

// GetHashicorpVaultEngineOk returns a tuple with the HashicorpVaultEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetHashicorpVaultEngineOk() (*string, bool) {
	if o == nil || o.HashicorpVaultEngine == nil {
		return nil, false
	}
	return o.HashicorpVaultEngine, true
}

// HasHashicorpVaultEngine returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasHashicorpVaultEngine() bool {
	if o != nil && o.HashicorpVaultEngine != nil {
		return true
	}

	return false
}

// SetHashicorpVaultEngine gets a reference to the given string and assigns it to the HashicorpVaultEngine field.
func (o *EnvironmentCreateParameters) SetHashicorpVaultEngine(v string) {
	o.HashicorpVaultEngine = &v
}

// GetHashicorpVaultSecretPath returns the HashicorpVaultSecretPath field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetHashicorpVaultSecretPath() string {
	if o == nil || o.HashicorpVaultSecretPath == nil {
		var ret string
		return ret
	}
	return *o.HashicorpVaultSecretPath
}

// GetHashicorpVaultSecretPathOk returns a tuple with the HashicorpVaultSecretPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetHashicorpVaultSecretPathOk() (*string, bool) {
	if o == nil || o.HashicorpVaultSecretPath == nil {
		return nil, false
	}
	return o.HashicorpVaultSecretPath, true
}

// HasHashicorpVaultSecretPath returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasHashicorpVaultSecretPath() bool {
	if o != nil && o.HashicorpVaultSecretPath != nil {
		return true
	}

	return false
}

// SetHashicorpVaultSecretPath gets a reference to the given string and assigns it to the HashicorpVaultSecretPath field.
func (o *EnvironmentCreateParameters) SetHashicorpVaultSecretPath(v string) {
	o.HashicorpVaultSecretPath = &v
}

// GetHashicorpVaultUsernameKey returns the HashicorpVaultUsernameKey field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetHashicorpVaultUsernameKey() string {
	if o == nil || o.HashicorpVaultUsernameKey == nil {
		var ret string
		return ret
	}
	return *o.HashicorpVaultUsernameKey
}

// GetHashicorpVaultUsernameKeyOk returns a tuple with the HashicorpVaultUsernameKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetHashicorpVaultUsernameKeyOk() (*string, bool) {
	if o == nil || o.HashicorpVaultUsernameKey == nil {
		return nil, false
	}
	return o.HashicorpVaultUsernameKey, true
}

// HasHashicorpVaultUsernameKey returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasHashicorpVaultUsernameKey() bool {
	if o != nil && o.HashicorpVaultUsernameKey != nil {
		return true
	}

	return false
}

// SetHashicorpVaultUsernameKey gets a reference to the given string and assigns it to the HashicorpVaultUsernameKey field.
func (o *EnvironmentCreateParameters) SetHashicorpVaultUsernameKey(v string) {
	o.HashicorpVaultUsernameKey = &v
}

// GetHashicorpVaultSecretKey returns the HashicorpVaultSecretKey field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetHashicorpVaultSecretKey() string {
	if o == nil || o.HashicorpVaultSecretKey == nil {
		var ret string
		return ret
	}
	return *o.HashicorpVaultSecretKey
}

// GetHashicorpVaultSecretKeyOk returns a tuple with the HashicorpVaultSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetHashicorpVaultSecretKeyOk() (*string, bool) {
	if o == nil || o.HashicorpVaultSecretKey == nil {
		return nil, false
	}
	return o.HashicorpVaultSecretKey, true
}

// HasHashicorpVaultSecretKey returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasHashicorpVaultSecretKey() bool {
	if o != nil && o.HashicorpVaultSecretKey != nil {
		return true
	}

	return false
}

// SetHashicorpVaultSecretKey gets a reference to the given string and assigns it to the HashicorpVaultSecretKey field.
func (o *EnvironmentCreateParameters) SetHashicorpVaultSecretKey(v string) {
	o.HashicorpVaultSecretKey = &v
}

// GetCyberarkVaultQueryString returns the CyberarkVaultQueryString field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetCyberarkVaultQueryString() string {
	if o == nil || o.CyberarkVaultQueryString == nil {
		var ret string
		return ret
	}
	return *o.CyberarkVaultQueryString
}

// GetCyberarkVaultQueryStringOk returns a tuple with the CyberarkVaultQueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetCyberarkVaultQueryStringOk() (*string, bool) {
	if o == nil || o.CyberarkVaultQueryString == nil {
		return nil, false
	}
	return o.CyberarkVaultQueryString, true
}

// HasCyberarkVaultQueryString returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasCyberarkVaultQueryString() bool {
	if o != nil && o.CyberarkVaultQueryString != nil {
		return true
	}

	return false
}

// SetCyberarkVaultQueryString gets a reference to the given string and assigns it to the CyberarkVaultQueryString field.
func (o *EnvironmentCreateParameters) SetCyberarkVaultQueryString(v string) {
	o.CyberarkVaultQueryString = &v
}

// GetNfsAddresses returns the NfsAddresses field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetNfsAddresses() []string {
	if o == nil || o.NfsAddresses == nil {
		var ret []string
		return ret
	}
	return o.NfsAddresses
}

// GetNfsAddressesOk returns a tuple with the NfsAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetNfsAddressesOk() ([]string, bool) {
	if o == nil || o.NfsAddresses == nil {
		return nil, false
	}
	return o.NfsAddresses, true
}

// HasNfsAddresses returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasNfsAddresses() bool {
	if o != nil && o.NfsAddresses != nil {
		return true
	}

	return false
}

// SetNfsAddresses gets a reference to the given []string and assigns it to the NfsAddresses field.
func (o *EnvironmentCreateParameters) SetNfsAddresses(v []string) {
	o.NfsAddresses = v
}

// GetAseDbUsername returns the AseDbUsername field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbUsername() string {
	if o == nil || o.AseDbUsername == nil {
		var ret string
		return ret
	}
	return *o.AseDbUsername
}

// GetAseDbUsernameOk returns a tuple with the AseDbUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbUsernameOk() (*string, bool) {
	if o == nil || o.AseDbUsername == nil {
		return nil, false
	}
	return o.AseDbUsername, true
}

// HasAseDbUsername returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbUsername() bool {
	if o != nil && o.AseDbUsername != nil {
		return true
	}

	return false
}

// SetAseDbUsername gets a reference to the given string and assigns it to the AseDbUsername field.
func (o *EnvironmentCreateParameters) SetAseDbUsername(v string) {
	o.AseDbUsername = &v
}

// GetAseDbPassword returns the AseDbPassword field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbPassword() string {
	if o == nil || o.AseDbPassword == nil {
		var ret string
		return ret
	}
	return *o.AseDbPassword
}

// GetAseDbPasswordOk returns a tuple with the AseDbPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbPasswordOk() (*string, bool) {
	if o == nil || o.AseDbPassword == nil {
		return nil, false
	}
	return o.AseDbPassword, true
}

// HasAseDbPassword returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbPassword() bool {
	if o != nil && o.AseDbPassword != nil {
		return true
	}

	return false
}

// SetAseDbPassword gets a reference to the given string and assigns it to the AseDbPassword field.
func (o *EnvironmentCreateParameters) SetAseDbPassword(v string) {
	o.AseDbPassword = &v
}

// GetAseDbVault returns the AseDbVault field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbVault() string {
	if o == nil || o.AseDbVault == nil {
		var ret string
		return ret
	}
	return *o.AseDbVault
}

// GetAseDbVaultOk returns a tuple with the AseDbVault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbVaultOk() (*string, bool) {
	if o == nil || o.AseDbVault == nil {
		return nil, false
	}
	return o.AseDbVault, true
}

// HasAseDbVault returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbVault() bool {
	if o != nil && o.AseDbVault != nil {
		return true
	}

	return false
}

// SetAseDbVault gets a reference to the given string and assigns it to the AseDbVault field.
func (o *EnvironmentCreateParameters) SetAseDbVault(v string) {
	o.AseDbVault = &v
}

// GetAseDbHashicorpVaultEngine returns the AseDbHashicorpVaultEngine field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultEngine() string {
	if o == nil || o.AseDbHashicorpVaultEngine == nil {
		var ret string
		return ret
	}
	return *o.AseDbHashicorpVaultEngine
}

// GetAseDbHashicorpVaultEngineOk returns a tuple with the AseDbHashicorpVaultEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultEngineOk() (*string, bool) {
	if o == nil || o.AseDbHashicorpVaultEngine == nil {
		return nil, false
	}
	return o.AseDbHashicorpVaultEngine, true
}

// HasAseDbHashicorpVaultEngine returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbHashicorpVaultEngine() bool {
	if o != nil && o.AseDbHashicorpVaultEngine != nil {
		return true
	}

	return false
}

// SetAseDbHashicorpVaultEngine gets a reference to the given string and assigns it to the AseDbHashicorpVaultEngine field.
func (o *EnvironmentCreateParameters) SetAseDbHashicorpVaultEngine(v string) {
	o.AseDbHashicorpVaultEngine = &v
}

// GetAseDbHashicorpVaultSecretPath returns the AseDbHashicorpVaultSecretPath field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultSecretPath() string {
	if o == nil || o.AseDbHashicorpVaultSecretPath == nil {
		var ret string
		return ret
	}
	return *o.AseDbHashicorpVaultSecretPath
}

// GetAseDbHashicorpVaultSecretPathOk returns a tuple with the AseDbHashicorpVaultSecretPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultSecretPathOk() (*string, bool) {
	if o == nil || o.AseDbHashicorpVaultSecretPath == nil {
		return nil, false
	}
	return o.AseDbHashicorpVaultSecretPath, true
}

// HasAseDbHashicorpVaultSecretPath returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbHashicorpVaultSecretPath() bool {
	if o != nil && o.AseDbHashicorpVaultSecretPath != nil {
		return true
	}

	return false
}

// SetAseDbHashicorpVaultSecretPath gets a reference to the given string and assigns it to the AseDbHashicorpVaultSecretPath field.
func (o *EnvironmentCreateParameters) SetAseDbHashicorpVaultSecretPath(v string) {
	o.AseDbHashicorpVaultSecretPath = &v
}

// GetAseDbHashicorpVaultUsernameKey returns the AseDbHashicorpVaultUsernameKey field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultUsernameKey() string {
	if o == nil || o.AseDbHashicorpVaultUsernameKey == nil {
		var ret string
		return ret
	}
	return *o.AseDbHashicorpVaultUsernameKey
}

// GetAseDbHashicorpVaultUsernameKeyOk returns a tuple with the AseDbHashicorpVaultUsernameKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultUsernameKeyOk() (*string, bool) {
	if o == nil || o.AseDbHashicorpVaultUsernameKey == nil {
		return nil, false
	}
	return o.AseDbHashicorpVaultUsernameKey, true
}

// HasAseDbHashicorpVaultUsernameKey returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbHashicorpVaultUsernameKey() bool {
	if o != nil && o.AseDbHashicorpVaultUsernameKey != nil {
		return true
	}

	return false
}

// SetAseDbHashicorpVaultUsernameKey gets a reference to the given string and assigns it to the AseDbHashicorpVaultUsernameKey field.
func (o *EnvironmentCreateParameters) SetAseDbHashicorpVaultUsernameKey(v string) {
	o.AseDbHashicorpVaultUsernameKey = &v
}

// GetAseDbHashicorpVaultSecretKey returns the AseDbHashicorpVaultSecretKey field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultSecretKey() string {
	if o == nil || o.AseDbHashicorpVaultSecretKey == nil {
		var ret string
		return ret
	}
	return *o.AseDbHashicorpVaultSecretKey
}

// GetAseDbHashicorpVaultSecretKeyOk returns a tuple with the AseDbHashicorpVaultSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbHashicorpVaultSecretKeyOk() (*string, bool) {
	if o == nil || o.AseDbHashicorpVaultSecretKey == nil {
		return nil, false
	}
	return o.AseDbHashicorpVaultSecretKey, true
}

// HasAseDbHashicorpVaultSecretKey returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbHashicorpVaultSecretKey() bool {
	if o != nil && o.AseDbHashicorpVaultSecretKey != nil {
		return true
	}

	return false
}

// SetAseDbHashicorpVaultSecretKey gets a reference to the given string and assigns it to the AseDbHashicorpVaultSecretKey field.
func (o *EnvironmentCreateParameters) SetAseDbHashicorpVaultSecretKey(v string) {
	o.AseDbHashicorpVaultSecretKey = &v
}

// GetAseDbCyberarkVaultQueryString returns the AseDbCyberarkVaultQueryString field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetAseDbCyberarkVaultQueryString() string {
	if o == nil || o.AseDbCyberarkVaultQueryString == nil {
		var ret string
		return ret
	}
	return *o.AseDbCyberarkVaultQueryString
}

// GetAseDbCyberarkVaultQueryStringOk returns a tuple with the AseDbCyberarkVaultQueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetAseDbCyberarkVaultQueryStringOk() (*string, bool) {
	if o == nil || o.AseDbCyberarkVaultQueryString == nil {
		return nil, false
	}
	return o.AseDbCyberarkVaultQueryString, true
}

// HasAseDbCyberarkVaultQueryString returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasAseDbCyberarkVaultQueryString() bool {
	if o != nil && o.AseDbCyberarkVaultQueryString != nil {
		return true
	}

	return false
}

// SetAseDbCyberarkVaultQueryString gets a reference to the given string and assigns it to the AseDbCyberarkVaultQueryString field.
func (o *EnvironmentCreateParameters) SetAseDbCyberarkVaultQueryString(v string) {
	o.AseDbCyberarkVaultQueryString = &v
}

// GetJavaHome returns the JavaHome field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetJavaHome() string {
	if o == nil || o.JavaHome == nil {
		var ret string
		return ret
	}
	return *o.JavaHome
}

// GetJavaHomeOk returns a tuple with the JavaHome field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetJavaHomeOk() (*string, bool) {
	if o == nil || o.JavaHome == nil {
		return nil, false
	}
	return o.JavaHome, true
}

// HasJavaHome returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasJavaHome() bool {
	if o != nil && o.JavaHome != nil {
		return true
	}

	return false
}

// SetJavaHome gets a reference to the given string and assigns it to the JavaHome field.
func (o *EnvironmentCreateParameters) SetJavaHome(v string) {
	o.JavaHome = &v
}

// GetDspKeystorePath returns the DspKeystorePath field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDspKeystorePath() string {
	if o == nil || o.DspKeystorePath == nil {
		var ret string
		return ret
	}
	return *o.DspKeystorePath
}

// GetDspKeystorePathOk returns a tuple with the DspKeystorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDspKeystorePathOk() (*string, bool) {
	if o == nil || o.DspKeystorePath == nil {
		return nil, false
	}
	return o.DspKeystorePath, true
}

// HasDspKeystorePath returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDspKeystorePath() bool {
	if o != nil && o.DspKeystorePath != nil {
		return true
	}

	return false
}

// SetDspKeystorePath gets a reference to the given string and assigns it to the DspKeystorePath field.
func (o *EnvironmentCreateParameters) SetDspKeystorePath(v string) {
	o.DspKeystorePath = &v
}

// GetDspKeystorePassword returns the DspKeystorePassword field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDspKeystorePassword() string {
	if o == nil || o.DspKeystorePassword == nil {
		var ret string
		return ret
	}
	return *o.DspKeystorePassword
}

// GetDspKeystorePasswordOk returns a tuple with the DspKeystorePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDspKeystorePasswordOk() (*string, bool) {
	if o == nil || o.DspKeystorePassword == nil {
		return nil, false
	}
	return o.DspKeystorePassword, true
}

// HasDspKeystorePassword returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDspKeystorePassword() bool {
	if o != nil && o.DspKeystorePassword != nil {
		return true
	}

	return false
}

// SetDspKeystorePassword gets a reference to the given string and assigns it to the DspKeystorePassword field.
func (o *EnvironmentCreateParameters) SetDspKeystorePassword(v string) {
	o.DspKeystorePassword = &v
}

// GetDspKeystoreAlias returns the DspKeystoreAlias field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDspKeystoreAlias() string {
	if o == nil || o.DspKeystoreAlias == nil {
		var ret string
		return ret
	}
	return *o.DspKeystoreAlias
}

// GetDspKeystoreAliasOk returns a tuple with the DspKeystoreAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDspKeystoreAliasOk() (*string, bool) {
	if o == nil || o.DspKeystoreAlias == nil {
		return nil, false
	}
	return o.DspKeystoreAlias, true
}

// HasDspKeystoreAlias returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDspKeystoreAlias() bool {
	if o != nil && o.DspKeystoreAlias != nil {
		return true
	}

	return false
}

// SetDspKeystoreAlias gets a reference to the given string and assigns it to the DspKeystoreAlias field.
func (o *EnvironmentCreateParameters) SetDspKeystoreAlias(v string) {
	o.DspKeystoreAlias = &v
}

// GetDspTruststorePath returns the DspTruststorePath field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDspTruststorePath() string {
	if o == nil || o.DspTruststorePath == nil {
		var ret string
		return ret
	}
	return *o.DspTruststorePath
}

// GetDspTruststorePathOk returns a tuple with the DspTruststorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDspTruststorePathOk() (*string, bool) {
	if o == nil || o.DspTruststorePath == nil {
		return nil, false
	}
	return o.DspTruststorePath, true
}

// HasDspTruststorePath returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDspTruststorePath() bool {
	if o != nil && o.DspTruststorePath != nil {
		return true
	}

	return false
}

// SetDspTruststorePath gets a reference to the given string and assigns it to the DspTruststorePath field.
func (o *EnvironmentCreateParameters) SetDspTruststorePath(v string) {
	o.DspTruststorePath = &v
}

// GetDspTruststorePassword returns the DspTruststorePassword field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDspTruststorePassword() string {
	if o == nil || o.DspTruststorePassword == nil {
		var ret string
		return ret
	}
	return *o.DspTruststorePassword
}

// GetDspTruststorePasswordOk returns a tuple with the DspTruststorePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDspTruststorePasswordOk() (*string, bool) {
	if o == nil || o.DspTruststorePassword == nil {
		return nil, false
	}
	return o.DspTruststorePassword, true
}

// HasDspTruststorePassword returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDspTruststorePassword() bool {
	if o != nil && o.DspTruststorePassword != nil {
		return true
	}

	return false
}

// SetDspTruststorePassword gets a reference to the given string and assigns it to the DspTruststorePassword field.
func (o *EnvironmentCreateParameters) SetDspTruststorePassword(v string) {
	o.DspTruststorePassword = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EnvironmentCreateParameters) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCreateParameters) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EnvironmentCreateParameters) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EnvironmentCreateParameters) SetDescription(v string) {
	o.Description = &v
}

func (o EnvironmentCreateParameters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["engine_id"] = o.EngineId
	}
	if true {
		toSerialize["os_name"] = o.OsName
	}
	if o.IsCluster != nil {
		toSerialize["is_cluster"] = o.IsCluster
	}
	if o.ClusterHome != nil {
		toSerialize["cluster_home"] = o.ClusterHome
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if o.StagingEnvironment != nil {
		toSerialize["staging_environment"] = o.StagingEnvironment
	}
	if o.ConnectorPort != nil {
		toSerialize["connector_port"] = o.ConnectorPort
	}
	if o.IsTarget != nil {
		toSerialize["is_target"] = o.IsTarget
	}
	if o.SshPort != nil {
		toSerialize["ssh_port"] = o.SshPort
	}
	if o.ToolkitPath != nil {
		toSerialize["toolkit_path"] = o.ToolkitPath
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Vault != nil {
		toSerialize["vault"] = o.Vault
	}
	if o.HashicorpVaultEngine != nil {
		toSerialize["hashicorp_vault_engine"] = o.HashicorpVaultEngine
	}
	if o.HashicorpVaultSecretPath != nil {
		toSerialize["hashicorp_vault_secret_path"] = o.HashicorpVaultSecretPath
	}
	if o.HashicorpVaultUsernameKey != nil {
		toSerialize["hashicorp_vault_username_key"] = o.HashicorpVaultUsernameKey
	}
	if o.HashicorpVaultSecretKey != nil {
		toSerialize["hashicorp_vault_secret_key"] = o.HashicorpVaultSecretKey
	}
	if o.CyberarkVaultQueryString != nil {
		toSerialize["cyberark_vault_query_string"] = o.CyberarkVaultQueryString
	}
	if o.NfsAddresses != nil {
		toSerialize["nfs_addresses"] = o.NfsAddresses
	}
	if o.AseDbUsername != nil {
		toSerialize["ase_db_username"] = o.AseDbUsername
	}
	if o.AseDbPassword != nil {
		toSerialize["ase_db_password"] = o.AseDbPassword
	}
	if o.AseDbVault != nil {
		toSerialize["ase_db_vault"] = o.AseDbVault
	}
	if o.AseDbHashicorpVaultEngine != nil {
		toSerialize["ase_db_hashicorp_vault_engine"] = o.AseDbHashicorpVaultEngine
	}
	if o.AseDbHashicorpVaultSecretPath != nil {
		toSerialize["ase_db_hashicorp_vault_secret_path"] = o.AseDbHashicorpVaultSecretPath
	}
	if o.AseDbHashicorpVaultUsernameKey != nil {
		toSerialize["ase_db_hashicorp_vault_username_key"] = o.AseDbHashicorpVaultUsernameKey
	}
	if o.AseDbHashicorpVaultSecretKey != nil {
		toSerialize["ase_db_hashicorp_vault_secret_key"] = o.AseDbHashicorpVaultSecretKey
	}
	if o.AseDbCyberarkVaultQueryString != nil {
		toSerialize["ase_db_cyberark_vault_query_string"] = o.AseDbCyberarkVaultQueryString
	}
	if o.JavaHome != nil {
		toSerialize["java_home"] = o.JavaHome
	}
	if o.DspKeystorePath != nil {
		toSerialize["dsp_keystore_path"] = o.DspKeystorePath
	}
	if o.DspKeystorePassword != nil {
		toSerialize["dsp_keystore_password"] = o.DspKeystorePassword
	}
	if o.DspKeystoreAlias != nil {
		toSerialize["dsp_keystore_alias"] = o.DspKeystoreAlias
	}
	if o.DspTruststorePath != nil {
		toSerialize["dsp_truststore_path"] = o.DspTruststorePath
	}
	if o.DspTruststorePassword != nil {
		toSerialize["dsp_truststore_password"] = o.DspTruststorePassword
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentCreateParameters struct {
	value *EnvironmentCreateParameters
	isSet bool
}

func (v NullableEnvironmentCreateParameters) Get() *EnvironmentCreateParameters {
	return v.value
}

func (v *NullableEnvironmentCreateParameters) Set(val *EnvironmentCreateParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentCreateParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentCreateParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentCreateParameters(val *EnvironmentCreateParameters) *NullableEnvironmentCreateParameters {
	return &NullableEnvironmentCreateParameters{value: val, isSet: true}
}

func (v NullableEnvironmentCreateParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentCreateParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


